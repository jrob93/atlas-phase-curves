"""
Creates the sql to generate a new table. Run using:
mysql -u root -p < create_atlas_objects_phase.sql
"""
import numpy as np

# load the columns as generated by gen_phase_curve_columns.ipynb
with open("atlas_objects_fields.txt", "r") as f:
    cols=f.readlines()
all_columns = np.array([x.rstrip() for x in cols])
print(all_columns)

# these columns should be added as integers, not floats
# DOUBLE CHECK WHAT DATA TYPE EACH COLUMN SHOULD BE
metric_ints = ["N_fit","N_nights","N_iter","N_alpha_low","nfev","ier","N_mag_err"]
ints = ["detection_count","detection_count_o","detection_count_c"]
tinyints = ["updated"]
datetimes = ["last_photometry_update_date_o","phase_curve_refresh_date_o",
"last_photometry_update_date_c","phase_curve_refresh_date_c",
"dateLastModified"]
varchars = ["name"]
mediumints = ["primaryId","orbital_elements_id","mpc_number"]
decimals = ["last_detection_mjd"]

# add lines that will add the following columns
# of=open("create_atlas_objects_phase.sql","w")
of=open("create_atlas_phase_fits.sql","w")
# of=open("create_test_table3.sql","w")

# Select the database to load
# of.write("USE atlas_moving_objects;\n")

# create the table with the columns
# of.write("CREATE TABLE test_table3 (\n")
of.write("CREATE TABLE atlas_phase_fits (\n")
new_columns=all_columns
for i,c in enumerate(new_columns):

    # select the correct data type
    if "_".join(c.split("_")[2:-2]) in metric_ints:
        data_type="int"
    elif c in ints:
        data_type="int(11)"
    elif c in tinyints:
        data_type="tinyint(4)"
    elif c in datetimes:
        data_type="datetime"
    elif c in varchars:
        data_type="varchar(100)"
    elif c in mediumints:
        data_type="mediumint(9)"
    elif c in decimals:
        data_type="decimal(17,7)"
    else:
        data_type="float"

    new_col_sql="{} {}".format(c,data_type)
    # print(new_col_sql)
    if i==(len(new_columns)-1):
        of.write("{}\n".format(new_col_sql))
    else:
        of.write("{},\n".format(new_col_sql))

# ADD LINES TO CREATE TABLE WITH THE INDEXES:
id1="PRIMARY KEY (primaryId)"
id2="UNIQUE INDEX (orbital_elements_id)"
id3="INDEX (mpc_number)"
of.write(",{},\n{},\n{}\n".format(id1,id2,id3))

of.write(");")
of.close()
